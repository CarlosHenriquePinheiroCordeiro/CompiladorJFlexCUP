package compilador;

import java.io.*;
import java_cup.runtime.*;
import compilador.Lexico;
import objetos.*;
import java.util.ArrayList;

parser code
{:
    // colocar funções que serão geradas no código
    // exemplo - tratamento de erros sintáticos
    public void syntax_error(Symbol s){
        String strErro = "Erro de sintaxe. Linha: " + (s.right + 1) +
            " Coluna: " + s.left + ". Texto: \"" + s.value + "\"" + " \n Token Encontrado: " + sym.terminalNames[s.sym] + " state " + s.parse_state;
        
        report_error(strErro, null); 
        
    }
    public void semantico(Object tk){
       System.out.println("Semântico....");
    }


    
:};

terminal PROGRAM      , IF     , TRUE  , FLOAT  , FALSE  , INT      , 
         STRING       , BOOL   , VOID  , PUBLIC , PRIVATE, PROTECTED, 
         RETURN       , AP     , FP    , AC     , FC     , ASP      , 
         PONTO_VIRGULA, VIRGULA, ARRAY , SOMA   , SUB    , MULT     , 
         DIV          , ATT    , IGUAL , DIF    , MAIORQ , MENORQ   , 
         MAIORI       , MENORI , NAO   , E      , OU     , ID       , 
         CONST        , ERRO   , TIPO  , CADEIA , WS;

non terminal Programa PROGRAMA;
non terminal ArrayList<Var> LISTA_VAR;
non terminal Var VAR;
non terminal Atribuicao ATRIBUICAO;
non terminal TERMO;
non terminal PARAMETRO;
non terminal OPERADOR_ARIT;
non terminal OPERADOR_BOOL;
non terminal EXPRESSAO;
non terminal Escopo SCOPE;
non terminal Funcao FUNCAO;
non terminal CALL_FUNC;
non terminal ESTRUTURA;
non terminal SELECAO;
non terminal BLOCO;
non terminal TIPO_RETORNO;
non terminal RETORNO;

PROGRAMA ::= PROGRAM ID AP LISTA_VAR FP AC BLOCO FC;

LISTA_VAR ::= LISTA_VAR VIRGULA VAR
			| VAR
			| ;

VAR ::= TIPO ID;

TERMO ::= ID 
		| NAO ID
		| CADEIA
		| CONST 
		| TRUE 
		| FALSE;

PARAMETRO ::= TERMO 
			| TERMO VIRGULA PARAMETRO
			| ;

OPERADOR_ARIT ::= SOMA 
				| SUB 
				| MULT 
				| DIV;

OPERADOR_BOOL ::= MAIORQ 
				| MENORQ 
				| MAIORI 
				| MENORI 
				| IGUAL
				| DIF
				| E
				| OU;

EXPRESSAO ::= TERMO 
			| TERMO OPERADOR_ARIT EXPRESSAO
			| TERMO OPERADOR_BOOL EXPRESSAO;

SCOPE ::= PUBLIC 
		| PRIVATE 
		| PROTECTED;

TIPO_RETORNO ::= TIPO
			   | VOID;

FUNCAO ::= SCOPE TIPO_RETORNO ID AP LISTA_VAR FP AC BLOCO RETORNO FC;

CALL_FUNC ::= ID AP PARAMETRO FP;

ESTRUTURA ::= SELECAO;

SELECAO ::= IF AP EXPRESSAO FP AC BLOCO FC;

ATRIBUICAO ::= VAR ATT EXPRESSAO
		| ID ATT EXPRESSAO;

BLOCO ::= ATRIBUICAO PONTO_VIRGULA BLOCO
		| EXPRESSAO PONTO_VIRGULA BLOCO 
		| CALL_FUNC PONTO_VIRGULA BLOCO 
		| FUNCAO BLOCO
		| ESTRUTURA BLOCO
		| ;

RETORNO ::= RETURN EXPRESSAO PONTO_VIRGULA
		  | RETURN CALL_FUNC PONTO_VIRGULA
		  | ;